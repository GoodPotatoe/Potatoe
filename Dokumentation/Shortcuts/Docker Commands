# [**Quelle Docker Commands**](https://www.howtoforge.com/tutorial/how-to-create-docker-images-with-dockerfile/#step-create-dockerfile)  

**FROM**
The base image for building a new image. This command must be on top of the dockerfile.  

**MAINTAINER**
Optional, it contains the name of the maintainer of the image.  

**RUN**
installation
Used to execute a command during the build process of the docker image.  

**ADD**
Copy a file from the host machine to the new docker image. There is an option to use an URL for the file, docker will then download that file to the destination directory.  

**ENV**
Define an environment variable.  
  
**CMD**
befehl ausf√ºhren
Used for executing commands when we build a new container from the docker image.  

**ENTRYPOINT**
Define the default command that will be executed when the container is running.  

**WORKDIR**
This is directive for CMD command to be executed.  

**USER**
Set the user or UID for the container created with the image. Enable access/linked directory between the container and the host machine.

stop all containers:
docker kill $(docker ps -q)

remove all containersd
docker rm $(docker ps -a -q)

remove all docker images
docker rmi $(docker images -q)

docker build -t friendlyhello .  # Create image using this directory's Dockerfile

docker run -p 4000:80 friendlyhello  # Run "friendlyname" mapping port 4000 to 80

docker run -d -p 4000:80 friendlyhello         # Same thing, but in detached mode

docker container ls                                # List all running containers

docker container ls -a             # List all containers, even those not running

docker container stop <hash>           # Gracefully stop the specified container

docker container kill <hash>         # Force shutdown of the specified container

docker container rm <hash>        # Remove specified container from this machine

docker container rm $(docker container ls -a -q)         # Remove all containers

docker image ls -a                             # List all images on this machine

docker image rm <image id>            # Remove specified image from this machine

docker image rm $(docker image ls -a -q)   # Remove all images from this machine

docker login             # Log in this CLI session using your Docker credentials

docker tag <image> username/repository:tag  # Tag <image> for upload to registry

docker push username/repository:tag            # Upload tagged image to registry

docker run username/repository:tag                   # Run image from a registry

